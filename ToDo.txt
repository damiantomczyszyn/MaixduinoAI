1. Jak stworzyć bibliotekę pin lub gdzie ją znajdę?
 - nie ma biblioteki pin kompatybilnej. trzeba ją napisać samemu
2. Dlaczego ESP32 micropython ją posiada, a maixduino nie?
- maixduino posiada własny firmware nawet na esp32
3. Jakie są różnice między wersjami flasha?
4. czy maixduino ma RTOS jak ESP
5. czy pythonDHT od sipped biblioteka zadziała na maixduino
6. https://beta-notes.way-nifty.com/blog/2020/03/post-48b886.html sprawdzenie tego tutorialu.
Jest opisany prawie w całości po angielsku i są różne przykłady, ale brak z DHT
7. Gdzie jest i jak wygląda kod źródłowy micropythona? - Jest napisany w C
8. Czym jest RTOS esp32 i jak z niego korzystać a jak z maixduino RTOS
9.  czym jest grove ? https://wiki.seeedstudio.com/Grove_System/ - Grove to modułowy, ustandaryzowany system prototypowania złączy
	* wymaga on drivera grove.py * działa na raspberrypi
10. Czy esp32 steruje wyjściami czy k210.
11. Który mcu jest główny i wykonuje kod
12. jak napisać bibliotekę pythona i wszystkie pliki.
13. czy biblioteki na esp32 różnią się od pythonowych na komputer (pip)
14. Repo mikropython https://github.com/micropython/micropython
15. Znalezienie kodu mikropythona dla esp32 i tutoriali jak zbudować kod
16. Pobranie espIDF do budowania firmwaru.
17. Zbudowanie własnego Firmware
18. znalezie maixduino source code
19. Przygotowanie maszyny virtualnej do kompilacji kodów / -tak
20. przygotowanie skryptu instalującego pakiety zależnie od wyboru dla maixduino, esp32, arduino
21. Zrobienie inżynierii wstecznej firmwaru na maixduino esp32
22. Da się napisać sterownik HID na arduino i ESP niezleżnie nawet jeśli są płytkami rozwojowymi
	i podłączyć go do pinoutów
23. Zrobienie projektu do nauki i testowania modułów komunikacyjnych
24. Skompletowanie czujnikow komunikacyjnych
25. Przetestowanie działania modułów BT oraz IR - done
26. Przetestowania działa modułów sieciowych 2.4gHZ i 433hz
27. Prace nad bluetooth
28. Prace nad hakowaniem bluetooth +1
29. Zrobić porządek z plikami i wrzucić kody

Czy micropython maixduino jest micropythonem zrobionym na oficjalnym micropythonie?
Jak zrobić firmware:
https://wiki.sipeed.com/soft/maixpy/en/firmware/why_customize_firware.html
You can customize your firmware at https://www.maixhub.com/compile.html
Or build by yourself according to  https://github.com/sipeed/MaixPy/blob/master/build.md

Wgranie konfiguracji do maixduino.(sipeed)
Zrozumienie jak ona się ma i frameworki jak są powiązane ze sobą:
- Seed-Studio
	*
- Sipeed - https://github.com/Seeed-Studio oficjalny github twórców płytki. 
Dostarcza na przykład konfigurację, przykłady noatników do uczenia modeli na płytkę, różne projekty w pythonie i c.
Prowadzą stronki sipeed.wiki i sipped.maixpy ide
- Sipeed/Maixduino - https://github.com/sipeed/Maixduino - biblioteki do płytki maixduino, core_arduino do arduinoIDE. 
- Sipeed/Kflash - https://github.com/sipeed/kflash.py - narzędzie kflash do mcu firmy sipeed
- Awsome-micropython
- awsome-k210 - https://github.com/elloza/awesome-k210 lista projektów i bibliotek i innych przydatych rzeczy
- AIWintermuteAI - https://github.com/AIWintermuteAI/aXeleRate ma repozytorium AxeleRate, Keras-based framework for AI on the Edge
- pythonDHT sipeed - https://github.com/Seeed-Studio/Seeed_Python_DHT
- https://github.com/sipeed/MaixPy - biblioteka maix zawierająca kamere ekran i inne skrypty biblioteki // MaixPy not only a Python SDK, but have a whole ecosystem, including hardware, software, tools, docs, etc. See the picture below:
- https://github.com/sipeed/MaixPy-v1 -  budowanie kodu firmware i skrypty programów   // MicroPython for K210 RISC-V, let's play with edge AI easier oprogramowanie
- API SDK wiki maixpy
Czym jest: 
- LVGL - LVGL (Light and Versatile Graphics Library):
LVGL to biblioteka graficzna typu open-source, która umożliwia tworzenie interfejsów użytkownika (UI) na urządzeniach wbudowanych, w tym na platformie Maixduino. 
- NES emulator - NES Emulator to oprogramowanie umożliwiające emulację konsoli Nintendo Entertainment System (NES) na platformie Maixduino.
- kmodel(versions V4,V3) - KModel to format modeli maszyny uczącej się (ang. machine learning models), które są kompatybilne z platformą Maixduino.
- openMV OpenMV to projekt open-source, który dostarcza zestaw narzędzi do tworzenia aplikacji wizyjnych na mikrokontrolerach. 
W platformie Maix Sipeed, OpenMV to środowisko programistyczne (IDE), które umożliwia programowanie aplikacji wizyjnych przy użyciu języka Python.
 - Spiffs - SPI flash file system https://github.com/pellepl/spiffs

Maixduino https://dl.sipeed.com/shareURL/MAIX/HDK/Sipeed-Maixduino
https://wiki.sipeed.com/soft/maixpy/en/get_started/get_started_led_blink.html

0x000000 bin
0x300000 model
0xD00000 Spiffs
16MB -0xffffff

fatfs SD

K210 will start to run the program from 0x000000
SPIFFS (Serial Peripheral Interface Flash File System) to system plików przeznaczony do pamięci flash w mikrokontrolerach,
zwłaszcza tych, które mają ograniczone zasoby pamięci RAM. SPIFFS jest często stosowany w mikrokontrolerach, które nie mają wystarczająco dużo pamięci RAM,
aby obsłużyć tradycyjne systemy plików takie jak FAT32.


Build - https://github.com/sipeed/MaixPy-v1/blob/master/build.md